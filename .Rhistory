shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
input<-readRDS("input.rds")
input<-readRDS("input.rds")
vals<-readRDS("vals.rds")
get<-vals$get_map_discfac_loop
data<-vals$data_discloop
get
data<-vals$data_discloop
data
req(input$data_map)
req(length(vals$saved_data[[input$data_map]])>0)
data=vals$saved_data[[input$data_map]]
#req(nrow(data)>0)
#req(input$var_map_filter1)
#factors<-attr(data, "factors")
#coords<-attr(data,"coords")
data
coords<-attr(data,'coords')
coords
get
data
get%in%colnames(vals$data_discloop)
data_go<-na.omit(data[,get,drop=F])
get
data
data<-vals$data_discloop
get%in%colnames(vals$data_discloop)
get%in%colnames(vals$data_discloop)
data_go<-na.omit(data[,get,drop=F])
data_go
colored_by_factor<-
if(isTRUE(input$colored_map)){
attr(data,"factors")[as.character(input$map_lab)]
} else {NULL}
colored_by_factor
!isTRUE(input$stack_scatter_3d)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
save.image()
shiny::runApp()
